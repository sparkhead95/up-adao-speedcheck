var cov_2ls6xcalku=function(){var path="C:\\Users\\Chris\\Pagespeed-Backend\\controllers\\apiController.js",hash="d7fef1a1e556bb627ad5b2d766ea3cecb0ad64ed",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\Chris\\Pagespeed-Backend\\controllers\\apiController.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:37}},"1":{start:{line:2,column:10},end:{line:2,column:27}},"2":{start:{line:3,column:13},end:{line:3,column:21}},"3":{start:{line:5,column:28},end:{line:5,column:88}},"4":{start:{line:6,column:21},end:{line:6,column:62}},"5":{start:{line:13,column:4},end:{line:26,column:5}},"6":{start:{line:14,column:8},end:{line:14,column:95}},"7":{start:{line:15,column:8},end:{line:15,column:23}},"8":{start:{line:17,column:8},end:{line:25,column:11}},"9":{start:{line:18,column:12},end:{line:24,column:13}},"10":{start:{line:19,column:16},end:{line:19,column:61}},"11":{start:{line:20,column:16},end:{line:20,column:31}},"12":{start:{line:22,column:16},end:{line:22,column:47}},"13":{start:{line:23,column:16},end:{line:23,column:31}},"14":{start:{line:31,column:16},end:{line:31,column:21}},"15":{start:{line:32,column:15},end:{line:32,column:23}},"16":{start:{line:34,column:4},end:{line:38,column:5}},"17":{start:{line:35,column:8},end:{line:37,column:9}},"18":{start:{line:36,column:12},end:{line:36,column:25}},"19":{start:{line:40,column:4},end:{line:40,column:17}},"20":{start:{line:44,column:4},end:{line:44,column:54}},"21":{start:{line:44,column:30},end:{line:44,column:54}},"22":{start:{line:46,column:29},end:{line:46,column:31}},"23":{start:{line:47,column:19},end:{line:49,column:5}},"24":{start:{line:52,column:4},end:{line:81,column:7}},"25":{start:{line:53,column:8},end:{line:53,column:57}},"26":{start:{line:53,column:35},end:{line:53,column:57}},"27":{start:{line:55,column:22},end:{line:59,column:9}},"28":{start:{line:61,column:8},end:{line:80,column:15}},"29":{start:{line:63,column:16},end:{line:63,column:45}},"30":{start:{line:65,column:16},end:{line:76,column:17}},"31":{start:{line:66,column:20},end:{line:73,column:23}},"32":{start:{line:67,column:24},end:{line:72,column:27}},"33":{start:{line:75,column:20},end:{line:75,column:39}},"34":{start:{line:79,column:16},end:{line:79,column:24}},"35":{start:{line:84,column:0},end:{line:84,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:13},end:{line:3,column:14}},loc:{start:{line:3,column:19},end:{line:3,column:21}},line:3},"1":{name:"handleApiRequest",decl:{start:{line:12,column:9},end:{line:12,column:25}},loc:{start:{line:12,column:63},end:{line:27,column:1}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:39},end:{line:17,column:40}},loc:{start:{line:17,column:58},end:{line:25,column:9}},line:17},"3":{name:"validBody",decl:{start:{line:30,column:9},end:{line:30,column:18}},loc:{start:{line:30,column:24},end:{line:41,column:1}},line:30},"4":{name:"speedCheckLinks",decl:{start:{line:43,column:9},end:{line:43,column:24}},loc:{start:{line:43,column:39},end:{line:82,column:1}},line:43},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:24},end:{line:52,column:25}},loc:{start:{line:52,column:31},end:{line:81,column:5}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:62,column:18},end:{line:62,column:19}},loc:{start:{line:62,column:33},end:{line:77,column:13}},line:62},"7":{name:"(anonymous_7)",decl:{start:{line:66,column:50},end:{line:66,column:51}},loc:{start:{line:66,column:70},end:{line:73,column:21}},line:66},"8":{name:"(anonymous_8)",decl:{start:{line:78,column:19},end:{line:78,column:20}},loc:{start:{line:78,column:34},end:{line:80,column:13}},line:78}},branchMap:{"0":{loc:{start:{line:12,column:42},end:{line:12,column:61}},type:"default-arg",locations:[{start:{line:12,column:57},end:{line:12,column:61}}],line:12},"1":{loc:{start:{line:13,column:4},end:{line:26,column:5}},type:"if",locations:[{start:{line:13,column:4},end:{line:26,column:5}},{start:{line:13,column:4},end:{line:26,column:5}}],line:13},"2":{loc:{start:{line:18,column:12},end:{line:24,column:13}},type:"if",locations:[{start:{line:18,column:12},end:{line:24,column:13}},{start:{line:18,column:12},end:{line:24,column:13}}],line:18},"3":{loc:{start:{line:34,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:38,column:5}},{start:{line:34,column:4},end:{line:38,column:5}}],line:34},"4":{loc:{start:{line:35,column:8},end:{line:37,column:9}},type:"if",locations:[{start:{line:35,column:8},end:{line:37,column:9}},{start:{line:35,column:8},end:{line:37,column:9}}],line:35},"5":{loc:{start:{line:35,column:12},end:{line:35,column:61}},type:"binary-expr",locations:[{start:{line:35,column:13},end:{line:35,column:34}},{start:{line:35,column:40},end:{line:35,column:60}}],line:35},"6":{loc:{start:{line:44,column:4},end:{line:44,column:54}},type:"if",locations:[{start:{line:44,column:4},end:{line:44,column:54}},{start:{line:44,column:4},end:{line:44,column:54}}],line:44},"7":{loc:{start:{line:53,column:8},end:{line:53,column:57}},type:"if",locations:[{start:{line:53,column:8},end:{line:53,column:57}},{start:{line:53,column:8},end:{line:53,column:57}}],line:53},"8":{loc:{start:{line:65,column:16},end:{line:76,column:17}},type:"if",locations:[{start:{line:65,column:16},end:{line:76,column:17}},{start:{line:65,column:16},end:{line:76,column:17}}],line:65}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const rp=(cov_2ls6xcalku.s[0]++,require('request-promise'));const _=(cov_2ls6xcalku.s[1]++,require('lodash'));cov_2ls6xcalku.s[2]++;const noop=()=>{cov_2ls6xcalku.f[0]++;};const googleSpeedCheckUrl=(cov_2ls6xcalku.s[3]++,'https://www.googleapis.com/pagespeedonline/v4/runPagespeed');const googleApiKey=(cov_2ls6xcalku.s[4]++,'AIzaSyCU16wC-50rZn9awSvSNJLQHt_eEslIyAc');// This function is called by the express router on /api post requests. It validates the request and does speed checks if all is good.
// I left the 'next' function in there in case the next route was needed at a later stage.
// I know the testCallback is a bit of an awkward way to test asynchronous functions in this file,
// but I didn't see it as much of a problem
function handleApiRequest(req,res,next,testCallback=(cov_2ls6xcalku.b[0][0]++,noop)){cov_2ls6xcalku.f[1]++;cov_2ls6xcalku.s[5]++;if(!validBody(req)){cov_2ls6xcalku.b[1][0]++;cov_2ls6xcalku.s[6]++;res.status(400).send('Invalid URL format. \'urls\' variable must be string or array.');cov_2ls6xcalku.s[7]++;testCallback();}else{cov_2ls6xcalku.b[1][1]++;cov_2ls6xcalku.s[8]++;speedCheckLinks(req.body.urls,(err,response)=>{cov_2ls6xcalku.f[2]++;cov_2ls6xcalku.s[9]++;if(err){cov_2ls6xcalku.b[2][0]++;cov_2ls6xcalku.s[10]++;res.status(err.statusCode).send(err.message);cov_2ls6xcalku.s[11]++;testCallback();}else{cov_2ls6xcalku.b[2][1]++;cov_2ls6xcalku.s[12]++;res.status(200).send(response);cov_2ls6xcalku.s[13]++;testCallback();}});}}// Checks the url in the body of the request to check if it's string or array
function validBody(req){cov_2ls6xcalku.f[3]++;let valid=(cov_2ls6xcalku.s[14]++,false);let body=(cov_2ls6xcalku.s[15]++,req.body);cov_2ls6xcalku.s[16]++;if(body.urls){cov_2ls6xcalku.b[3][0]++;cov_2ls6xcalku.s[17]++;if((cov_2ls6xcalku.b[5][0]++,_.isString(body.urls))||(cov_2ls6xcalku.b[5][1]++,_.isArray(body.urls))){cov_2ls6xcalku.b[4][0]++;cov_2ls6xcalku.s[18]++;valid=true;}else{cov_2ls6xcalku.b[4][1]++;}}else{cov_2ls6xcalku.b[3][1]++;}cov_2ls6xcalku.s[19]++;return valid;}function speedCheckLinks(urlArray,cb){cov_2ls6xcalku.f[4]++;cov_2ls6xcalku.s[20]++;if(!_.isArray(urlArray)){cov_2ls6xcalku.b[6][0]++;cov_2ls6xcalku.s[21]++;urlArray=[urlArray];}else{cov_2ls6xcalku.b[6][1]++;}// Convert string to array using lodash array check
let speedCheckPromises=(cov_2ls6xcalku.s[22]++,[]);let response=(cov_2ls6xcalku.s[23]++,{sites:[]});// For every url in the list of urls provided in the request, do a speed check and return them all once done
cov_2ls6xcalku.s[24]++;_.forEach(urlArray,url=>{cov_2ls6xcalku.f[5]++;cov_2ls6xcalku.s[25]++;if(!url.includes('http')){cov_2ls6xcalku.b[7][0]++;cov_2ls6xcalku.s[26]++;url='http://'+url;}else{cov_2ls6xcalku.b[7][1]++;}let options=(cov_2ls6xcalku.s[27]++,{uri:googleSpeedCheckUrl,qs:{url,key:googleApiKey},json:true});cov_2ls6xcalku.s[28]++;rp(options).then(function(res){cov_2ls6xcalku.f[6]++;cov_2ls6xcalku.s[29]++;speedCheckPromises.push(res);cov_2ls6xcalku.s[30]++;if(speedCheckPromises.length===urlArray.length){cov_2ls6xcalku.b[8][0]++;cov_2ls6xcalku.s[31]++;_.forEach(speedCheckPromises,speedCheckResult=>{cov_2ls6xcalku.f[7]++;cov_2ls6xcalku.s[32]++;response.sites.push({title:speedCheckResult.title,response_code:speedCheckResult.responseCode,speed_score:speedCheckResult.ruleGroups.SPEED.score,url:speedCheckResult.id});});cov_2ls6xcalku.s[33]++;cb(null,response);}else{cov_2ls6xcalku.b[8][1]++;}}).catch(function(err){cov_2ls6xcalku.f[8]++;cov_2ls6xcalku.s[34]++;cb(err);});});}cov_2ls6xcalku.s[35]++;module.exports=handleApiRequest;